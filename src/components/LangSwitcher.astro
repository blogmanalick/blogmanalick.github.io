---
import { DEFAULT_LANG, getCurrentLang, LANG_NAME, type LangKey } from '../lib/lang';

type Props = {
	langLinks?: Partial<Record<LangKey, string>>
	prefix?: string;
};

const { langLinks, prefix } = Astro.props;

const getLangHref = (lang: string, slug: string) => {
  const base = lang === DEFAULT_LANG ? '/' : `/${lang}/`
  if(!prefix) return `${base}${slug}`;
	return `${base}${prefix}/${slug}`;
};

const currentLang = getCurrentLang(Astro.url);
const empty = { pt: '', en: '', es: '' }
---

<div class="lang-switcher">
	<nav>
		{
			Object.entries(langLinks ?? empty).map(([lang, slug]) => {
				const href = getLangHref(lang, slug);
				return (
					<a 
						href={href}
						class={currentLang === lang ? 'active' : ''}
						data-lang={lang}
					>
						{LANG_NAME[lang as LangKey]}
					</a>
				);
			})
		}
	</nav>
</div>

<style>
	.lang-switcher {
		margin-bottom: 2em;
		padding: 0 1em;
		background: rgba(var(--gray), 5%);
		border-radius: var(--border-radius);
		display: flex;
		align-items: center;
		gap: 0.5em;
	}
	.lang-switcher::before {
		content: 'üåê';
		flex-shrink: 0;
	}
	.lang-switcher nav {
		display: flex;
		align-items: center;
		gap: 0.5em;
		flex-wrap: wrap;
		flex: 1;
	}
	.lang-switcher a {
		padding: 1rem 1rem calc(1rem - 4px) 1rem;
		text-decoration: none;
		color: rgb(var(--gray-dark))
	}
	.lang-switcher a.active {
		border-bottom: 4px solid var(--accent);
	}

	:global(.prose) .lang-switcher {
		margin-bottom: 1em;
	}
	:global(.prose) .lang-switcher a {
		color: rgb(var(--black));
	}
	:global(.prose) .lang-switcher a:hover,
	:global(.prose) .lang-switcher a.active {
		background: rgba(var(--accent), 10%);
	}


	@media (max-width: 760px) {
		.lang-switcher nav { justify-content: center; }
	}
	@media (max-width: 460px) {	
		.lang-switcher a { 
			font-size: 0; 
			padding: 0.5rem; 
		}
		.lang-switcher a::after { 
			content: attr(data-lang);
			text-transform: uppercase;
			font-size: 1rem;
		}
	}
</style>
