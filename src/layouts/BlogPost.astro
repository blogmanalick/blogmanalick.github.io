---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import LangSwitcher from '../components/LangSwitcher.astro';
import "./BlogPost.css"
import DiscussOnBluesky from '../components/DiscussOnBluesky.astro';

type Props = CollectionEntry<'blog'>['data'] & {
	langLinks?: {
		pt?: string;
		en?: string;
		es?: string;
	};
	bluesky?: string
};

const { title, description, pubDate, updatedDate, heroImage, langLinks, bluesky } = Astro.props;

// Determinar idioma atual
const currentLang = Astro.url.pathname.startsWith('/en/') ? 'en' 
	: Astro.url.pathname.startsWith('/es/') ? 'es' 
	: 'pt';
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} image={heroImage} />
	</head>
	<body>
		<Header />
		<main>
			<article>
				<div class="prose">
					<div class="title">
						<h1>{title}</h1>
						<div class="date">
							<FormattedDate date={pubDate} locale={currentLang === 'pt' ? 'pt-BR' : currentLang === 'en' ? 'en' : 'es'} />
							{
								updatedDate && (
									<div class="last-updated-on">
										{currentLang === 'pt' ? 'Atualizado em' : currentLang === 'en' ? 'Last updated on' : 'Actualizado el'} <FormattedDate date={updatedDate} locale={currentLang === 'pt' ? 'pt-BR' : currentLang === 'en' ? 'en' : 'es'} />
									</div>
								)
							}
						</div>
						{langLinks && (
							<LangSwitcher prefix='posts' langLinks={langLinks} />
						)}
							<hr />
					</div>
					<slot />
					<hr />
					{bluesky && <DiscussOnBluesky href={bluesky} />}
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
